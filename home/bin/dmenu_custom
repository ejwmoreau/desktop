#!/usr/bin/env python

import re
import subprocess
import sys

# Script to run dmenu with a particular theme + screen position

def define_geo(screen_width, screen_height):
    w = int(screen_width * 0.2)
    x = int((screen_width - w) / 2)
    y = int(screen_height * 0.2)

    return {
        'x': str(x),
        'y': str(y),
        'w': str(w),
    }

def get_theme():
    # TODO: Maybe get the colors from ~/.Xresources
    theme = sys.argv[1] if len(sys.argv) > 1 else 'original'
    css = {
        'original': ['#1B1D1E', '#80D4FF', '#333333', '#FFFFFF'],
        'bright':   ['#373B41', '#DE935F', '#81A2BE', '#000000'],
        'test':     ['#FF0000', '#00FF00', '#0000FF', '#FFFFFF'],
    }

    return css[theme]

# Using --current allows xrandr to return 1~2 seconds quicker in multi-monitor + HiDPI situations
xrandr_output = subprocess.run(['xrandr', '--current'], capture_output=True).stdout
connected_lines = subprocess.run(['grep', ' connected'], input=xrandr_output, capture_output=True).stdout.decode().split('\n')
regex = re.compile('\d+x\d+')
for line in connected_lines:
    # TODO: Ideally, use the width & height of the output dmenu will be on, instead of the laptop one
    if 'eDP-1 connected' in line or 'default connected' in line:
        res = regex.search(line).group(0).strip().split('x')
        geo = define_geo(int(res[0]), int(res[1]))
        break

# Reuse the font from ~/.Xresources
font = subprocess.run(['xrdb', '-get', 'urxvt.font'], capture_output=True).stdout.decode().strip().removeprefix('xft:')
theme = get_theme()

subprocess.run([
    'dmenu_run',
    '-l', '8',       # Number of lines to display
    '-fn', font,     # Font & size from ~/.Xresources
    '-nb', theme[0], # Normal background color
    '-nf', theme[1], # Normal foreground color
    '-sb', theme[2], # Selected background color
    '-sf', theme[3], # Selected foreground color
    '-p', '',        # Prompt to be displayed on the left
    '-f',            # Something to allow typing earlier
    '-i',            # Case insensitive matching
    '-x', geo['x'],
    '-y', geo['y'],
    '-w', geo['w'],
])
