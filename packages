#!/usr/bin/env python

from collections import namedtuple
import csv
import subprocess


def dependencies():
    PackageTuple = namedtuple('Package', 'name aur')

    with open('./packages.csv') as csvfile:
        reader = csv.reader(csvfile, delimiter=',')
        for row in reader:
            if row[1] == '0':
                aur = False
            else:
                aur = True
            yield PackageTuple(name=row[0], aur=aur)


class Pacman:
    def query(self):
        """
        Get the result of 'pacman -Q' as a list of tuples, this is a generator.
        @returns Yields a named tuple with .name and .version
        """
        PackageTuple = namedtuple('Package', 'name version')

        stdout = subprocess.run(["pacman", "-Q"], stdout=subprocess.PIPE).stdout
        stdout = stdout.decode('utf8')
        for line in stdout.split('\n'):
            if line == '':
                continue
            parts = line.split(' ')
            yield PackageTuple(name=parts[0], version=parts[1])


if __name__ == '__main__':
    pacman = Pacman()
    deps = list(dependencies())

    uninstalled = list(deps)
    for dep in deps:
        for pkg in pacman.query():
            if dep.name == pkg.name:
                uninstalled.remove(dep)

    aur = []
    official = []
    for pkg in uninstalled:
        if pkg.aur:
            aur.append(pkg)
        else:
            official.append(pkg)

    if aur:
        print("Please install the following packages from the AUR:")
        for pkg in aur:
            print(" - {}".format(pkg.name))

    if official:
        print("Please install the following packages")
        for pkg in official:
            print(" - {}".format(pkg.name))

    if not aur and not official:
        print("All dependencies are installed")
